{"mappings":"AACA,MAAMA,EAAcC,SAASC,cAAc,iBACrCC,EAASF,SAASC,cAAc,WAChCE,EAAQH,SAASC,cAAc,UAC/BG,EAAUJ,SAASC,cAAc,aAoBGF,EAA9BM,iBAAiB,UAAWC,IACtC,MAAMC,EAAkBD,EAAME,OAAOC,MCV9B,IAAyBC,EDW5BH,IACFL,EAAOS,MAAMC,QAAU,QACvBR,EAAQO,MAAMC,QAAU,OACxBT,EAAMQ,MAAMC,QAAU,QCdQF,EDedH,ECbTM,MADK,wDAAwDH,IAClD,CAChBI,QAAS,CACP,YAnBO,2EAqBRC,MAAMC,IACP,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,gCAElB,OAAOF,EAASG,OAAOJ,MAAMK,IAC3B,GAAIA,EAAKC,OAAS,EAChB,MAAO,CACLC,KAAMF,EAAK,GAAGG,OAAO,GAAGD,KACxBE,YAAaJ,EAAK,GAAGG,OAAO,GAAGC,YAC/BC,YAAaL,EAAK,GAAGG,OAAO,GAAGE,YAC/BC,IAAKN,EAAK,GAAGM,KAGf,MAAM,IAAIR,MAAM,sCAAsC,GAExD,KDLDH,MAAMY,KAhB0B,SAAfA,GACtBvB,EAAQwB,UAAY,mBACND,EAAID,uCACLC,EAAIL,iCACGK,EAAIH,wCACJG,EAAIF,qB,CAYlBI,CAAeF,GACfzB,EAAOS,MAAMC,QAAU,OACvBR,EAAQO,MAAMC,QAAU,OAAO,IAEhCkB,OAAM,KACL3B,EAAMQ,MAAMC,QAAU,QACtBV,EAAOS,MAAMC,QAAU,MAAM,I,IAKrCV,EAAOS,MAAMC,QAAU,QCxCZC,MAAM,sCAAuC,CAClDC,QAAS,CACP,YALO,2EAORC,MAAMC,IACP,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,0BAElB,OAAOF,EAASG,MAAM,IDkCzBJ,MAAMQ,KAvCuB,SAARA,GACtBA,EAAOQ,SAASC,IACd,MAAMC,EAASjC,SAASkC,cAAc,UACtCD,EAAOxB,MAAQuB,EAAMG,GACrBF,EAAOG,YAAcJ,EAAMV,KAC3BvB,EAAYsC,YAAYJ,EAAO,G,CAmC/BK,CAAef,GACfrB,EAAOS,MAAMC,QAAU,OACvBb,EAAYY,MAAMC,QAAU,OAAO,IAEpCkB,OAAM,KACL3B,EAAMQ,MAAMC,QAAU,QACtBV,EAAOS,MAAMC,QAAU,MAAM","sources":["src/index.js","src/cat-api.js"],"sourcesContent":["import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\nconst breedSelect = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader');\nconst error = document.querySelector('.error');\nconst catInfo = document.querySelector('.cat-info');\n// Функція для заповнення селекту порід\nfunction populateBreeds(breeds) {\n  breeds.forEach((breed) => {\n    const option = document.createElement('option');\n    option.value = breed.id;\n    option.textContent = breed.name;\n    breedSelect.appendChild(option);\n  });\n}\n// Функція для відображення інформації про кота\nfunction displayCatInfo(cat) {\n  catInfo.innerHTML = `\n    <img src=\"${cat.url}\" alt=\"Cat Image\">\n    <p>Name: ${cat.name}</p>\n    <p>Description: ${cat.description}</p>\n    <p>Temperament: ${cat.temperament}</p>\n  `;\n}\n// Обробник події при зміні вибраної опції в селекті\nbreedSelect.addEventListener('change', (event) => {\n  const selectedBreedId = event.target.value;\n  if (selectedBreedId) {\n    loader.style.display = 'block';\n    catInfo.style.display = 'none';\n    error.style.display = 'none';\n    fetchCatByBreed(selectedBreedId)\n      .then((cat) => {\n        displayCatInfo(cat);\n        loader.style.display = 'none';\n        catInfo.style.display = 'block';\n      })\n      .catch(() => {\n        error.style.display = 'block';\n        loader.style.display = 'none';\n      });\n  }\n});\n// Виклик функції для отримання та заповнення списку порід\nloader.style.display = 'block';\nfetchBreeds()\n  .then((breeds) => {\n    populateBreeds(breeds);\n    loader.style.display = 'none';\n    breedSelect.style.display = 'block';\n  })\n  .catch(() => {\n    error.style.display = 'block';\n    loader.style.display = 'none';\n  });","const apiKey = 'live_9i6HzzZFNFA1oaYRze81AbtKlBywv3OJ6502fJjo0pAUtFOdj61V5PlPH5ga6JCl';\n// Функція для виконання запиту на отримання списку порід\nexport function fetchBreeds() {\n    return fetch('https://api.thecatapi.com/v1/breeds', {\n      headers: {\n        'x-api-key': apiKey,\n      },\n    }).then((response) => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch breeds');\n      }\n      return response.json();\n    });\n  }\n  // Функція для виконання запиту на отримання інформації про кота за породою\n  export function fetchCatByBreed(breedId) {\n    const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`;\n    return fetch(url, {\n      headers: {\n        'x-api-key': apiKey,\n      },\n    }).then((response) => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch cat by breed');\n      }\n      return response.json().then((data) => {\n        if (data.length > 0) {\n          return {\n            name: data[0].breeds[0].name,\n            description: data[0].breeds[0].description,\n            temperament: data[0].breeds[0].temperament,\n            url: data[0].url,\n          };\n        } else {\n          throw new Error('No cat found for the selected breed');\n        }\n      });\n    });\n  }"],"names":["$1f0dc3b9307be026$var$breedSelect","document","querySelector","$1f0dc3b9307be026$var$loader","$1f0dc3b9307be026$var$error","$1f0dc3b9307be026$var$catInfo","addEventListener","event","selectedBreedId","target","value","breedId","style","display","fetch","headers","then","response","ok","Error","json","data","length","name","breeds","description","temperament","url","cat","innerHTML","$1f0dc3b9307be026$var$displayCatInfo","catch","forEach","breed","option","createElement","id","textContent","appendChild","$1f0dc3b9307be026$var$populateBreeds"],"version":3,"file":"index.9e442d2d.js.map"}